function [collected_epochs] = collect_epochs(tags, params, channel)

% this needs to be done before this call
 ch_tags = get_ch_tags(tags, channel);

% Initialize some of the counters and matricies
nepochs = length(params.ana.epoch_list);
total_epochs_analzed = 0;
collected_epochs = [];

for j=1:nepochs
    include = 1;
    epoch_n = params.ana.epoch_list(j);
    epoch_tag = get_epoch_tag(ch_tags,epoch_n);
    %display(sprintf('Epoch#%d: %6.0fms to %6.0fms', epoch_n, epoch_tag.limits(1), epoch_tag.limits(2)));
    if (epoch_tag.valid )
        display(sprintf('Epoch %d is valid.', epoch_n));
        if (epoch_tag.markers(1))
            display(sprintf('  Marked at %5.0f ms', epoch_tag.markers(1)));
            if (params.ana.exlude_marked)
                include = 0;
            end
        end
    else
        display(sprintf('Epoch %d is NOT valid', epoch_n));
        if (params.ana.exclude_invalid)
            include = 0;
        end
    end
    if (include)
        total_epochs_analzed = total_epochs_analzed + 1;
        % Store the valid epochs
        collected_epochs{total_epochs} = ch_tags{j};
        
    else
        display('  This epoch will NOT be included.')
    end
end
% All the spectra are now computed - can do all other calculations

% Plot the average power
h = figure(1);
set(h, 'Name', 'Normalized (to baseline) average power');
plot_spectrum(mean(abs(spectra), 3), frq, EEG.srate, params);

% Plot the circular variance
h = figure(2);
set(h, 'Name', 'Circular variance (normalized)');
cvar = abs(sum(spectra, 3))/total_epochs_analzed;
plot_spectrum(cvar, frq, EEG.srate, params);

% Plot the cross-frequency modulation

h = figure(3);
set(h, 'Name', 'Cross-frequency modulation');
display('Computing cross-frequency modulation...');
blsamples = time_to_samples(params.ana.baseline, EEG.srate);
sub_spectra = spectra(:,blsamples:end,:);
[mp ms] = cross_freq_mod(sub_spectra);
plot_cfmodulation(mp, ms, params, frq);
clear('sub_spectra');


% If specified compute the PL statistics
if (params.pl.inclplcalcs)
    display('Computing PL statistics...');
    pl = pl_matrix(length(frq), length(spectra),params.pl.bins);
    for p=1:total_epochs_analzed
        pl = set_pl_matrix(pl, spectra(:,:,p));
    end
    pl_stats = get_pl_stats(pl, params.pl.probbins, params.pl.steps);

    % Remove this object, since it is very large
    clear('pl');

    h = figure(4);
    set(h, 'Name', 'PL statistics (normalized)');
    plot_spectrum(pl_stats, frq, EEG.srate, params);


end
